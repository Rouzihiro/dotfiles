#!/usr/bin/env bash

# Directory to store last folder per session
session_dir="$HOME/.tmux_sessions"
mkdir -p "$session_dir"

# Hot folders → Timewarrior categories
declare -A dirs=(
    ["$HOME/Documents/Notes"]="OSTEOLOGY"
    ["$HOME/Documents"]="ORTHOGERIATRIC"
    ["$HOME/Downloads"]="BROWSING"
    ["$HOME/Games"]="WASTED"
    ["$HOME/assets"]="PROGRAMMING"
    ["$HOME/Videos"]="VIDEO/SERIES"
    ["$HOME/suckless"]="PROGRAMMING"
    ["$HOME/dotfiles"]="PROGRAMMING"
    ["$HOME/Hamburg-Events"]="BROWSING"
    ["$HOME/mount"]="VIDEO/SERIES"
    ["$HOME/.local"]="PROGRAMMING"
    ["$HOME"]="PROGRAMMING"
)

# Add STOP option
menu_options=("STOP" "${!dirs[@]}")

# Select folder/category
if [[ $# -eq 1 ]]; then
    selected="$1"
else
    selected=$(printf "%s\n" "${menu_options[@]}" | fzf --height=40% --border --prompt='Select: ')
fi
[[ -z "$selected" ]] && exit 0

# Function: update all sessions' status-right
update_status() {
    local path="$1"

    # Get currently tracked category from Timewarrior
    local active_cat
    active_cat=$(timew | awk '/Tracking/ {print $2; exit}')
    [[ -z "$active_cat" ]] && active_cat="IDLE"

    # Get total tracked time in minutes only
    local total_sec
    total_sec=$(timew | awk '/^ *Total/ {split($NF,t,":"); print t[1]*60 + t[2]}')
    local total_min=$((total_sec / 60))

    tmux list-sessions -F "#{session_name}" | while read s; do
        tmux set-option -t "$s" status-right "\
#[fg=#719cd6,bg=default]\
#[fg=#192330,bg=#719cd6]  $(basename "$path") \
#[fg=#719cd6,bg=#9d79d6]#[fg=#192330,bg=#9d79d6] $active_cat ${total_min} min \
#[fg=#9d79d6,bg=default]"
    done
}

# Handle STOP option
if [[ "$selected" == "STOP" ]]; then
    timew stop >/dev/null 2>&1
    update_status "$PWD"
    exit 0
fi

# Session name (basename, dots → underscores)
session=$(basename "$selected" | tr . _)
last_file="$session_dir/$session"
[[ -f "$last_file" ]] && selected=$(cat "$last_file")
category="${dirs[$selected]}"

# Stop previous tracking, start new category
if [[ -n "$category" ]]; then
    timew stop >/dev/null 2>&1
    timew start "$category"
fi

# Create tmux session if missing
if ! tmux has-session -t "$session" 2>/dev/null; then
    tmux new-session -ds "$session" -c "$selected"
fi

# Attach or switch session
if [[ -z "$TMUX" ]]; then
    tmux attach-session -t "$session"
else
    tmux switch-client -t "$session"
fi

# Save last folder for this session
echo "$selected" > "$last_file"

# Initial status update (works for first session too)
update_status "$selected"

# --- Event-driven hooks ---

# Stop Timewarrior on session close
tmux set-hook -t "$session" session-closed "run-shell 'timew stop >/dev/null 2>&1; $(declare -f update_status); update_status \"$PWD\"'"

# Update status on session switch
tmux set-hook -g client-session-changed "run-shell '$(declare -f update_status); update_status \"$selected\"'"

# Update status on session creation
tmux set-hook -g session-created "run-shell '$(declare -f update_status); update_status \"$selected\"'"
