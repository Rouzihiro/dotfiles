#!/bin/sh

# Create secure temp directory
workdir=$(mktemp -d -t "ocr-XXXXXX") || {
    notify-send -t 2000 "OCR Screenshot" "Failed to create temp directory"
    exit 1
}

timestamp=$(date +%Y%m%d%H%M%S)
imgname="$workdir/screenshot-${timestamp}.png"
txtname="$workdir/text-${timestamp}"

# Capture screenshot using slop + maim
geometry=$(slop -f "%x %y %w %h")
if [ -z "$geometry" ]; then
    notify-send -t 2000 "OCR Screenshot" "No region selected"
    rm -rf "$workdir"
    exit 1
fi

x=$(echo $geometry | awk '{print $1}')
y=$(echo $geometry | awk '{print $2}')
w=$(echo $geometry | awk '{print $3}')
h=$(echo $geometry | awk '{print $4}')

if ! maim -g "${w}x${h}+${x}+${y}" "$imgname"; then
    notify-send -t 2000 "OCR Screenshot" "Failed to capture screenshot"
    rm -rf "$workdir"
    exit 1
fi

# Run OCR with English + German
if ! tesseract "$imgname" "$txtname" -l deu+eng; then
    notify-send -t 2000 "OCR Screenshot" "OCR processing failed"
    rm -rf "$workdir"
    exit 1
fi

output_file="${txtname}.txt"
if [ ! -f "$output_file" ]; then
    notify-send -t 2000 "OCR Screenshot" "No text output generated"
    rm -rf "$workdir"
    exit 1
fi

# Copy entire OCR output to X11 clipboard
xclip -selection clipboard < "$output_file"

# Send notification with first 50 characters as preview
preview=$(head -c 50 "$output_file" | tr '\n' ' ')
notify-send -t 2000 "OCR Screenshot" "Copied: ${preview}..."

# Cleanup
rm -rf "$workdir"

