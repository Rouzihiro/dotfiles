# A TOML linter such as https://taplo.tamasfe.dev/ can use this schema to validate your config.
# If you encounter any issues, please make an issue at https://github.com/yazi-rs/schemas.
"$schema" = "https://yazi-rs.github.io/schemas/keymap.json"

# on  = "C"
# run = 'shell "for path in \"$@\"; do echo \"file://$path\"; done | wl-copy -t text/uri-list" --confirm'
# desc = "Copy the files to the clipboard" }

[input]
prepend_keymap = [
  { on = '<Esc>',        run  = 'close',                  desc = 'Cancel input'}
]

[mgr]
# Make all changed keymaps into prepend_keymap, keep the default config as is
# Easier to Maintain and keep track of
prepend_keymap = [
	{ on = '<C-n>',        run = 'find_arrow',              desc = 'Go to the next found' },
	{ on = '<C-p>',        run = 'find_arrow --previous',   desc = 'Go to the previous found' },

	{ on = '<A-j>',        run = 'arrow 5',                 desc = 'Move cursor 5 up' },
	{ on = '<A-k>',        run = 'arrow -5',                desc = 'Move cursor 5 down' },

	{ on = '<C-k>',        run = 'seek -5',                 desc = 'Seek up 5 units in the preview' },
	{ on = '<C-j>',        run = 'seek 5',                  desc = 'Seek down 5 units in the preview' },

	{ on = [ 'y', 'p' ],   run = 'copy path',               desc = 'Yank the file path' },
	{ on = [ 'y', 'd' ],   run = 'copy dirname',            desc = 'Yank the directory path' },
	{ on = [ 'y', 'f' ],   run = 'copy filename',           desc = 'Yank the filename' },
	{ on = [ 'y', 'n' ],   run = 'copy name_without_ext',   desc = 'Yank the filename without extension' },

	{ on = [ 'g', 'b' ],       run = 'back',                                    desc = 'Go to previous directory ' },
	{ on = [ 'g', '<Space>' ], run = 'cd --interactive',                        desc = 'Go to a directory interactively' },
	{ on = [ 'g', 'h' ],       run = 'cd ~',                                    desc = 'Go to the home directory' },
	{ on = [ 'g', '/' ],       run = 'cd /',                                    desc = 'Go to the root directory' },
	{ on = [ 'g', 'd' ],       run = 'cd ~/Downloads',                          desc = 'Go to the downloads directory' },
	{ on = [ 'g', 'w' ],       run = 'cd ~/Documents',                          desc = 'Go to the documents directory' },
	{ on = [ 'g', 'c' ],       run = 'cd ~/.config',                            desc = 'Go to the config directory' },
	{ on = [ 'g', 't' ],       run = 'cd ~/Test/',                              desc = 'Go to the test directory' },
	{ on = [ 'g', 'T' ],       run = 'cd ~/.trash/',                            desc = 'Go to the .trash directory' },
	{ on = [ 'g', 'f' ],       run = 'cd ~/dotfiles',                           desc = 'Go to the dotfiles directory' },
	{ on = [ 'g', 'v' ],       run = 'cd ~/Videos/',                    desc = 'Go to the Obsidian directory' },
  { on = [ 'g', 'g' ],       run = 'cd ~/Games/',                               desc = 'Go to the Roms directory' },
	{ on = [ 'g', 'p' ],       run = 'cd ~/Pictures/',                 desc = 'Go to the wallpapers directory' },
	{ on = [ 'g', 'b' ],       run = 'cd ~/.local/bin/',                        desc = 'Go to the .local/bin directory' },
	{ on = [ 'g', 'e' ],       run = 'cd ~/Hamburg-Events//',                             desc = 'Go to the Books directory' },
	{ on = [ 'g', 'm' ],       run = 'cd ~/mount/',                               desc = 'Go to the Syncthing directory' },
	{ on = [ 'g', 'l' ],  		 run = 'cd ~/.local/',                      desc = 'Go to the .local/share directory' },

	{ on = ['y', 'y' ],  	run = 'yank',                                            desc = 'Yank selected files (copy)' },
	{ on = 'L',           run = 'link',                                            desc = 'Symlink the absolute path of yanked files' },
  { on = 'e',           run = 'shell -- bash "$@"',                              desc = 'Execute the selected file' },
	{ on = 'f',           run = 'plugin fzf',                                      desc = 'Jump to a directory or reveal a file using fzf' },
	{ on = [ 'd','d' ],   run = 'remove',                                          desc = 'Trash selected files' },
	{ on = [ 'd','u' ],   run = 'shell --block -- $SHELL -c "dua i"',              desc = 'Run dua-cli in current directory' },

  { on = '<Backspace>', run = 'unyank',                                          desc = 'Unyank' },
  { on = '<Esc>',       run = ['unyank', 'escape'],                              desc = 'Clean Unyank/selected, cancel search' },
  { on = '|',           run = 'plugin personal "resize 0 1 2"',                  desc = 'Toggle Pane ratio of 0, 1, 2' },
  { on = '`',           run = 'plugin personal "random"',                        desc = 'Pick a random file' },
  { on = 'l',           run = 'plugin personal "smart_enter"',                   desc = 'Smart enter, Open file or enter directory' },
  { on = 'J',           run = 'plugin personal "move_parent 1"',                 desc = 'Go to below parent directory' },
  { on = 'K',           run = 'plugin personal "move_parent -1"',                desc = 'Go to above parent directory' },
  { on = '<A-n>',       run = 'plugin personal "new_dir"',                       desc = 'Move to new directory' },
  { on = '<C-t>',       run = 'plugin personal "directory_tab"',                 desc = 'Open selected directory in a tab' },
  { on = '<A-p>',       run = 'plugin personal "chmod"',                         desc = 'Chmod on selected files' },
  { on = '<A-x>',       run = 'plugin personal "chmodx"',                        desc = 'Chmod to executable selected files' },
  { on = '<A-s>',       run = 'plugin personal "share"',                         desc = 'Share selected file with 0x0.st'},
  { on = ['b', 'g'],    run = 'shell -- "$HOME"/scripts/set-wall "$0"',          desc = 'Set Wallpaper' },
  { on = ['d', 'g'],    run = 'shell -- ripdrag -x -b -n -t -k -a "$@"',         desc = 'Drag and Drop with ripdrag' },
  { on = 's',           run = 'shell --block -- $SHELL',                         desc = 'Open shell here' },
  # { on = [ 'b', 't' ],  run = 'shell --interactive -- chmod',                    desc = 'Testing interactive shells'}
]

# Some disabled keymaps to remove since they cause conflict
# Put these lines in keymaps = []
	# { on = "H", run = "back",    desc = "Go back to the previous directory" },
	# { on = "L", run = "forward", desc = "Go forward to the next directory" },

	# Seeking
	# { on = "K", run = "seek -5", desc = "Seek up 5 units in the preview" },
	# { on = "J", run = "seek 5",  desc = "Seek down 5 units in the preview" },

	# Copy
	# { on = [ "c", "c" ], run = "copy path",             desc = "Copy the file path" },
	# { on = [ "c", "d" ], run = "copy dirname",          desc = "Copy the directory path" },
	# { on = [ "c", "f" ], run = "copy filename",         desc = "Copy the filename" },
	# { on = [ "c", "n" ], run = "copy name_without_ext", desc = "Copy the filename without extension" },

	# Operation
  # { on = "y",         run = "yank",                        desc = "Yank selected files (copy)" },
	# { on = "-",         run = "link",                        desc = "Symlink the absolute path of yanked files" },
	# { on = "_",         run = "link --relative",             desc = "Symlink the relative path of yanked files" },
	# { on = "<C-->",     run = "hardlink",                    desc = "Hardlink yanked files" },
	# { on = "Y",         run = "unyank",                      desc = "Cancel the yank status" },
	# { on = "X",         run = "unyank",                      desc = "Cancel the yank status" },
	# { on = "d",         run = "remove",                      desc = "Trash selected files" },
