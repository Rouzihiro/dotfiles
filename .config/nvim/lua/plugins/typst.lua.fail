-- Declare plugins
vim.pack.add({
  { src = "https://github.com/chomosuke/typst-preview.nvim", opt = true },
  { src = "https://github.com/nvim-treesitter/nvim-treesitter" },
  { src = "https://github.com/kaarmu/typst.vim" }, -- Optional: fallback syntax
})

vim.cmd.packadd("typst-preview.nvim")
local typst_preview = require("typst-preview")

typst_preview.setup({
  open_cmd = "zathura",
  auto_refresh = true,
  show_logs = false,
  output = "output.pdf",
})

-- Treesitter setup for typst
require("nvim-treesitter.configs").setup({
  ensure_installed = { "typst" },
  highlight = { enable = true },
})

-- LSP setup (tinymist)
require("lspconfig").typst_lsp = {
  default_config = {
    cmd = { "tinymist", "lsp" },
    filetypes = { "typst" },
    root_dir = require("lspconfig.util").root_pattern("typst.toml", ".git"),
    settings = {},
  }
}
require("lspconfig").typst_lsp.setup({})

-- Keymaps for Typst preview commands
vim.keymap.set("n", "<leader>tp", "<cmd>TypstPreviewToggle<CR>", { desc = "Toggle Typst Preview" })
vim.keymap.set("n", "<leader>tc", "<cmd>TypstPreviewOpen<CR>", { desc = "Open Typst Preview" })
vim.keymap.set("n", "<leader>tq", "<cmd>TypstPreviewClose<CR>", { desc = "Close Typst Preview" })

-- Auto-compile on save for *.typ files
vim.api.nvim_create_autocmd("BufWritePost", {
  pattern = "*.typ",
  callback = function()
    vim.cmd("TypstPreviewRefresh")
  end,
})

