#!/bin/bash

# Define the Wine RPM file path
WINE_RPM="wine-10.4-2.fc42.x86_64.rpm"

# List of the missing dependencies
DEPENDENCIES=(
  "wine-common"
  "wine-core"
  "wine-desktop"
  "wine-fonts"
  "wine-mono"
  "wine-pulseaudio"
  "wine-smartcard"
  "wine-twain"
  "wine-ldap"
  "wine-opencl"
)

# Download and install dependencies using dnf with --skip-broken
install_dependency() {
  local dep=$1
  echo "Downloading and installing $dep..."

  # Try downloading the dependency using dnf, forcing x86_64 architecture
  dnf download --repo=fedora --repo=updates --forcearch=x86_64 --best "$dep" -y

  # Get the downloaded RPM file name
  rpm_file=$(ls *.rpm | grep "$dep")

  # Install the RPM file if it's downloaded, ignoring architecture mismatch
  if [ -f "$rpm_file" ]; then
    echo "Installing $rpm_file..."
    sudo rpm -i --force "$rpm_file"
  else
    echo "Failed to download $dep. Skipping..."
  fi
}

# Check if Wine RPM exists
if [ ! -f "$WINE_RPM" ]; then
  echo "Wine RPM not found. Please download $WINE_RPM first."
  exit 1
fi

# Install Wine RPM using dnf if it's not installed yet, forcing x86_64 architecture
echo "Installing Wine..."
sudo dnf install ./"$WINE_RPM" --forcearch=x86_64 --skip-broken -y

# Iterate through each missing dependency and install, forcing x86_64 architecture
for dep in "${DEPENDENCIES[@]}"; do
  install_dependency "$dep"
done

# Verify the installation
echo "Wine and its dependencies should now be installed."
wine --version

