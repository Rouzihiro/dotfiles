#!/bin/bash

print_paired_devices() {
    mapfile -t lines <<< "$(bluetoothctl -- devices)"
    if [[ ${#lines[@]} -eq 0 ]]; then
        echo "‚ùå No paired devices found."
        return 1
    fi

    echo "üìã Paired Devices:"
    for i in "${!lines[@]}"; do
        mac=$(echo "${lines[$i]}" | awk '{print $2}')
        name=$(echo "${lines[$i]}" | cut -d' ' -f3-)
        echo "[$i] $name ($mac)"
    done
    return 0
}

select_device() {
    read -p "üëâ Select a device [0-$((${#lines[@]} - 1))]: " choice
    if ! [[ "$choice" =~ ^[0-9]+$ ]] || (( choice < 0 || choice >= ${#lines[@]} )); then
        echo "‚ùå Invalid selection."
        exit 1
    fi

    selected_mac=$(echo "${lines[$choice]}" | awk '{print $2}')
    selected_name=$(echo "${lines[$choice]}" | cut -d' ' -f3-)
}

scan_and_pair_device() {
    echo "üîç Scanning for nearby devices (10s)..."
    bluetoothctl << EOF > /dev/null
power on
scan on
EOF
    sleep 10
    bluetoothctl scan off > /dev/null

    mapfile -t new_devices <<< "$(bluetoothctl devices | grep -v -f <(bluetoothctl paired-devices | awk '{print $2}'))"
    if [[ ${#new_devices[@]} -eq 0 ]]; then
        echo "‚ùå No unpaired devices found."
        return
    fi

    echo "üÜï Found Unpaired Devices:"
    for i in "${!new_devices[@]}"; do
        mac=$(echo "${new_devices[$i]}" | awk '{print $2}')
        name=$(echo "${new_devices[$i]}" | cut -d' ' -f3-)
        echo "[$i] $name ($mac)"
    done

    read -p "üëâ Select a device to pair [0-$((${#new_devices[@]} - 1))]: " choice
    if ! [[ "$choice" =~ ^[0-9]+$ ]] || (( choice < 0 || choice >= ${#new_devices[@]} )); then
        echo "‚ùå Invalid selection."
        exit 1
    fi

    mac=$(echo "${new_devices[$choice]}" | awk '{print $2}')
    name=$(echo "${new_devices[$choice]}" | cut -d' ' -f3-)

    echo "üîó Pairing and connecting to $name ($mac)..."
    bluetoothctl << EOF
agent on
default-agent
pair $mac
trust $mac
connect $mac
EOF
}

main_menu() {
    echo ""
    echo "üéÆ Bluetooth Action Menu:"
    echo "1. Connect to a paired device"
    echo "2. Disconnect from a paired device"
    echo "3. Remove (unpair) a device"
    echo "4. Scan and pair a new device"
    echo "5. Exit"
    echo ""
    read -p "Choose an action [1-5]: " action
}

# Run menu
clear
echo "üîß Bluetooth Device Manager"
main_menu

case "$action" in
    1)
        print_paired_devices || exit 1
        select_device
        echo "üîó Connecting to $selected_name ($selected_mac)..."
        bluetoothctl << EOF
connect $selected_mac
EOF
        ;;
    2)
        print_paired_devices || exit 1
        select_device
        echo "üîå Disconnecting from $selected_name ($selected_mac)..."
        bluetoothctl << EOF
disconnect $selected_mac
EOF
        ;;
    3)
        print_paired_devices || exit 1
        select_device
        echo "‚ùå Removing $selected_name ($selected_mac)..."
        bluetoothctl << EOF
remove $selected_mac
EOF
        ;;
    4)
        scan_and_pair_device
        ;;
    5)
        echo "üëã Bye!"
        exit 0
        ;;
    *)
        echo "‚ùå Invalid option."
        exit 1
        ;;
esac

